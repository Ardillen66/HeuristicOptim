clicksData <- read.csv(file.choose())
clickData
clicksData
clicksData$clicks
boxplot(clicksData$clicks)
boxplot(clicksData$clicks, normal)
norm = pnorm(200)
boxplot(clicksData$clicks, norm)
norm = rnorm(200)
boxplot(norm)
norm
clicks <- clicksData$clicks
xseq <- seq(-4,4,.01)
norm <- pnorm(xseq, mean(clicks), sd(clicks))
plot(norm)
plot(xseq, norm)
norm <- dnorm(xseq, mean(clicks), sd(clicks))
plot(xseq, norm)
plot(norm)
norm <- dnorm(0, mean(clicks), sd(clicks))
plot(norm)
norm <- rnorm(length(clicks), mean(clicks), sd(clicks))
plot(norm)
norm <- dnorm(xseq, mean(clicks), sd(clicks))
plot(xseq, norm)
norm <- dnorm(xseq, 0, 1)
plot(xseq, norm)
xseq <- seq(min(clicks), max(clicks), by=.01)
norm <- dnorm(xseq, mean(clicks), sd(clicks))
plot(xseq, norm)
boxplot(clicks, norm)
boxplot(norm)
boxplot(xsqeq, norm)
boxplot(xseq, norm)
plot(xseq, norm)
norm <- rnorm(200, mean(clicks), sd(clicks))
boxplot(clicks, norm)
norm <- rnorm(2000, mean(clicks), sd(clicks))
boxplot(clicks, norm)
clicksData <- read.csv(file.choose())
clicks <- clicksData$clicks
norm <- rnorm(200, mean(clicks), sd(clicks))
boxplot(clicks, norm)
clicksData <- read.csv(file.choose(C:\Users\arnau\Documents\School\Projecten 16_17\Methods_Of_Scientific_Research\Assignment3\Question1_3))
clicks <- clicksData$clicks
norm <- rnorm(200, mean(clicks), sd(clicks))
boxplot(clicks, norm)
clicksData <- read.csv(file.choose(C:\Users\arnau\Documents\School\Projecten 16_17\Methods_Of_Scientific_Research\Assignment3\Question1_3))
clicks <- clicksData$clicks
norm <- rnorm(200, mean(clicks), sd(clicks))
boxplot(clicks, norm)
clicksData <- read.csv(file.choose(C:\Users\arnau\Documents\School\Projecten 16_17\Methods_Of_Scientific_Research\Assignment3\Question1_3))
clicks <- clicksData$clicks
norm <- rnorm(200, mean(clicks), sd(clicks))
boxplot(clicks, norm, names=c("Clicks", "Normal"))
clicksData <- read.csv(file.choose(C:\Users\arnau\Documents\School\Projecten 16_17\Methods_Of_Scientific_Research\Assignment3\Question1_3))
clicks <- clicksData$clicks
norm <- rnorm(200, mean(clicks), sd(clicks))
boxplot(clicks, norm, names=c("Clicks", "Normal"), ylab="Number of clicks")
hist(clicks)
hist(clicks, prob=TRUE)
curve(dnorm(xseq, mean(clicks), sd(clicks)), add=TRUE)
curve(dnorm(x, mean(clicks), sd(clicks)), add=TRUE)
curve(dnorm(x, mean(clicks), sd(clicks)), add=TRUE, col="darkblue")
clicksData <- read.csv(file.choose(C:\Users\arnau\Documents\School\Projecten 16_17\Methods_Of_Scientific_Research\Assignment3\Question1_3))
clicks <- clicksData$clicks
norm <- rnorm(200, mean(clicks), sd(clicks))
boxplot(clicks, norm, names=c("Clicks", "Normal"), ylab="Number of clicks")
hist(clicks, prob=TRUE)
curve(dnorm(x, mean(clicks), sd(clicks)), add=TRUE, col="darkblue")
clicksData <- read.csv(file.choose(C:\Users\arnau\Documents\School\Projecten 16_17\Methods_Of_Scientific_Research\Assignment3\Question1_3))
clicks <- clicksData$clicks
norm <- rnorm(200, mean(clicks), sd(clicks))
boxplot(clicks, norm, names=c("Clicks", "Normal"), ylab="Number of clicks")
hist(clicks, prob=TRUE)
curve(dnorm(x, mean(clicks), sd(clicks)), add=TRUE, col="darkblue")
plot(dnorm(x, mean(clicks), sd(clicks)))
hist(clicks, prob=TRUE)
curve(dnorm(x, mean(clicks), sd(clicks)), add=TRUE, col="darkblue")
plot(pnorm(p, mean(clicks), sd(clicks)))
xseq <- seq(min(clicks), max(clicks), .01)
plot(pnorm(xseq, mean(clicks), sd(clicks)))
plot(pnorm(xseq, mean(clicks), sd(clicks)), type="l")
lines(xseq, clicks)
curve(clicks, add=TRUE, col="darkblue")
lines(xseq, clicks)
plot(xseq, pnorm(xseq, mean(clicks), sd(clicks)), type="l")
clicks
lines(xseq, clicks)
qqlines(clicks)
qqline(clicks)
qqnorm(clicks)
qqline(clicks)
qqnorm(clicks)
qqline(clicks)
clicksData <- read.csv(file.choose(C:\Users\arnau\Documents\School\Projecten 16_17\Methods_Of_Scientific_Research\Assignment3\Question1_3))
clicks <- clicksData$clicks
norm <- rnorm(200, mean(clicks), sd(clicks))
boxplot(clicks, norm, names=c("Clicks", "Normal"), ylab="Number of clicks")
hist(clicks, prob=TRUE)
curve(dnorm(x, mean(clicks), sd(clicks)), add=TRUE, col="darkblue")
qqnorm(clicks)
qqline(clicks)
clicksV1 = clicks[clicks=="variant1"]
clicksV1
clicksV1 <- clicks[clicks=="variant1"]
clicksV1
clicks
clicksV1 <- clicksData[clicksData$clicks=="variant1"]
clicks
clicksV1
clicksV1 <- clicksData[clicksData$clicks=="variant1"]$clicks
clicksV1
clicksV1 <- clicksData[clicksData$clicks=="variant1",]$clicks
clicksV1
clicksV1 <- clicksData[clicksData$cvariant=="variant1",]$clicks
clicksV1
clicksV1 <- clicksData[clicksData$variant=="variant1",]$clicks
clicksV1
shapiro.test(clicks)
shapiro.test(clicks)
shapiro.test(clicksV1)
shapiro.test(clicksV2)
clicksV1 <- clicksData[clicksData$variant=="variant1",]$clicks
clicksV2 <- clicksData[clicksData$variant=="variant2",]$clicks
shapiro.test(clicksV1)
shapiro.test(clicksV2)
size(clicksV1)
length(clicksV1)
length(clicksV2)
t.test(clicksV1, clicksV2, paired=FALSE)
#Import data and select clicks column
clicksData <- read.csv(file.choose(C:\Users\arnau\Documents\School\Projecten 16_17\Methods_Of_Scientific_Research\Assignment3\Question1_3))
clicks <- clicksData$clicks
#We also need some normaly distributed data
norm <- rnorm(200, mean(clicks), sd(clicks))
#draws the boxplot
boxplot(clicks, norm, names=c("Clicks", "Normal"), ylab="Number of clicks")
boxplot(clicks, norm, names=c("Clicks", "Normal"), col=c("blue", "red"), ylab="Number of clicks")
boxplot(clicks, norm, names=c("Clicks", "Normal"), ylab="Number of clicks")
#draws the histogram
hist(clicks, prob=TRUE)
curve(dnorm(x, mean(clicks), sd(clicks)), add=TRUE, col="darkblue")
#draws the Q-Q plot
qqnorm(clicks)
qqline(clicks)
var.test(clicksV1, clicksV2)
q()
cpuData
cpuData <- file.select(C:\Users\arnau\Documents\School\Projecten 16_17\Methods_Of_Scientific_Research\Assignment3\Question2_4)
cpuData <- file.select("C:\Users\arnau\Documents\School\Projecten 16_17\Methods_Of_Scientific_Research\Assignment3\Question2_4")
cpuData <- read.csv("C:\Users\arnau\Documents\School\Projecten 16_17\Methods_Of_Scientific_Research\Assignment3\Question2_4")
cpuData <- read.csv(C:\Users\arnau\Documents\School\Projecten 16_17\Methods_Of_Scientific_Research\Assignment3\Question2_4)
cpuData <- read.csv(file.choose(C:\Users\arnau\Documents\School\Projecten 16_17\Methods_Of_Scientific_Research\Assignment3\Question2_4))
cpuData <- read.csv(file.choose("C:\Users\arnau\Documents\School\Projecten 16_17\Methods_Of_Scientific_Research\Assignment3\Question2_4"))
clicksData <- read.csv(file.choose(C:\Users\arnau\Documents\School\Projecten 16_17\Methods_Of_Scientific_Research\Assignment3\Question1_3))
clicksData <- read.csv("Question1_3"))
clicksData <- read.csv("Question1_3")
clicksData <- read.csv("Question1_3.csv")
getwd()
clicksData <- read.csv(file.choose())
cpuData <- read.csv(file.choose())
cpuData
plot(cpuData$temperature)
hist(cpuData$temperature)
hist(cpuData$temperature, cpuData$crashed)
hist(cpuData$crashed)
cpuAov <- aov(temperature~crashed, data=cpuData)
summary(cpuAov)
bar(cpuData$crashed)
 table(cpuData$crashed)
dbinom(1, size=length(cpuData), prob=0.5)
dbinom(41, size=length(cpuData), prob=0.5)
plot(cpuAov)
output<-factor(cpuData$crashed)
output
model<-glm( formula=output~input,family=binomial )
model<-glm( formula=output~temperature,family=binomial )
output<-factor(cpuData)
model<-glm( formula=output~cpuData$temperature,family=binomial )
summary(model)
help("logistics")
dlogis(cpuData)
anova(model, test="Chisq")
logistic(cpuData)
crashed <- cpuData$crashed
temps <- cpuData$temperature
output<-factor(crashed)
model<-glm( formula=output~temps,family=binomial)
summary(model)
plot(temps, output)
points( temps, model$fitted+1, pch=3, col=“red” ))
points(temps, model$fitted+1, pch=3, col=“red”))
plot(temps, output)
points(temps, model$fitted+1, pch=3, col=“red”))
lines(temps, model$fitted+1, pch=3, col=“red”))
lines(temps, model$fitted, pch=3, col=“red”))
model$fitted
lines(temps, model$fitted, pch=3, col=“red”))
lines(temps, model$fitted, pch=3, col=“red”)
lines(temps, model$fitted+1, pch=3, col=“red”)
plot(temps, output)
points(temps, model$fitted+1, pch=3, col=“red”)
points(temps, model$fitted+1, pch=3, col=“red”)
library(ggplot2)
temps
output<-factor(crashed)
model<-glm( formula=output~temps,family=binomial)
summary(model)
plot(temps, output)
points(temps, model$fitted+1, pch=3, col=“red”)
plot(temps, crashed)
plot(model)
plot(temps, model$fitted+1, pch=3, col=“red”)
plot(temps, model$fitted, pch=3, col=“red”)
model$fitted
factor
factor(crashed)
model<-glm( formula=crashed~temps,family=binomial)
summary(model)
plot(temps, crashed)
lines(temps, model$fitted, pch=3, col=“red”)
plot(temps, model$fitted)
output<-factor(crashed)
model<-glm( formula=crashed~temps,family=binomial)
summary(model)
plot(temps, crashed)
lines(temps, model$fitted, pch=3, col=“red”)
lines(temps, model$fitted, pch=3, col="red")
lines(temps, model$fitted+1, pch=3, col="red")
output<-factor(crashed)
model<-glm( formula=crashed~temps,family=binomial)
summary(model)
plot(temps, crashed)
lines(temps, model$fitted+1, pch=3, col="red")
lines(temps, model$fitted, pch=3, col="red")
q()
cpuData <- read.csv(file.choose())
temps <- cpuData$temperature
crashed <- cpuData$crashed
cpuAov <- aov(temperature~crashed, data=cpuData)
summary(cpuAov)
plot(cpuAov)
output<-factor(crashed)
model<-glm( formula=crashed~temps,family=binomial)
summary(model)
plot(temps, crashed)
lines(temps, model$fitted, pch=3, col="red")
points(temps, model$fitted, pch=3, col="red")
plot(temps, crashed)
points(temps, model$fitted, pch=3, col="red")
help(glm)
anova(model)
cpuData
model<-glm( formula=output~temps,family=binomial)
output<-factor(crashed)
model<-glm( formula=output~temps,family=binomial)
summary(model)
plot(temps, crashed)
points(temps, model$fitted, pch=3, col="red")
plot(temps, crashed, ylab="Probability", xlab="Temperature")
points(temps, model$fitted, pch=3, col="red")
help(summary.glm)
progData <- read.csv(file.chose())
progData <- read.csv(file.choose())
progData
model <- lm(formula = progData$score ~ progData$group + progData$age)
summary(model)
model <- lm(formula = scores ~ lang + ages)
scores <- progData$score
lang <- progData$group
ages <- progData$age
model <- lm(formula = scores ~ lang + ages)
plot(scores, ages)
model
model$fit
lines(scores, model$fit)
plot(model)
plot(scores, lang + ages)
plot(scores, lang)
lines(scores, model$fit)
lines(scores, model$fit)
plot(ages, scores)
lines(scores, model$fit)
lines(model$fit, sscores)
lines(model$fit, scores)
points(model$fit, scores)
plot(ages, scores)
points(model$fit, scores)
points(model$fit, scores, col="red")
confint(model)
plot(lang, scores)
plot(lang, scores)
aov(formula = scores ~ lang + ages)
q()
clicksData <- read.csv(file.choose())
clicks <- clicksData$clicks
norm <- rnorm(200, mean(clicks), sd(clicks))
#draws the boxplot
boxplot(clicks, norm, names=c("Clicks", "Normal"), ylab="Number of clicks")
#draws the histogram
hist(clicks, prob=TRUE)
curve(dnorm(x, mean(clicks), sd(clicks)), add=TRUE, col="darkblue")
#draws the Q-Q plot
qqnorm(clicks)
qqline(clicks)
#Test for normality
shapiro.test(clicks)
clicksV1 <- clicksData[clicksData$variant=="variant1",]$clicks
clicksV2 <- clicksData[clicksData$variant=="variant2",]$clicks
shapiro.test(clicksV1)
shapiro.test(clicksV2)
t.test(clicksV1, clicksV2, paired=FALSE)
var.test(clicksV1, clicksV2)
install(pwr)
library(pwr)
help(package)
install.packages(pwr)
install.packages("pwr")
cd <- cohens_d(clicksV1, clicksV2)
#Function to calculate Cohen's d for a t-test
cohens_d <- function(x, y) {
    lx <- length(x)- 1
    ly <- length(y)- 1
    md  <- abs(mean(x) - mean(y))        ## mean difference (numerator)
    csd <- lx * var(x) + ly * var(y)
    csd <- csd/(lx + ly)
    csd <- sqrt(csd)                     ## common sd computation
    cd  <- md/csd                        ## cohen's d
}
cd <- cohens_d(clicksV1, clicksV2)
cd
t.test(clicksV1, clicksV2, paired=FALSE, var.equal=TRUE)
cd <- cohens_d(clicksV1, clicksV2)
cd
pwr.t.test(n = 100, sig.level = 0.05, power = cd, type = "two.sample") 
library(pwr)
pwr.t.test(n = 100, sig.level = 0.05, power = cd, type = "two.sample") 
pwr.t.test(n = 100, sig.level = 0.05, d= cd, type = "two.sample") 
q()
cpuData <- read.csv(file.choose())
temps <- cpuData$temperature
crashed <- cpuData$crashed
output<-factor(crashed)
model<-glm( formula=output~temps,family=binomial)
summary(model)
plot(temps, crashed, ylab="Probability", xlab="Temperature")
points(temps, model$fitted, pch=3, col="red")
progData <- read.csv(file.choose())
pyData <- progData[progData$group=="Python", ]
scData <- progData[progData$group=="Scheme", ]
pyScores <- pyData$score
scScores <- scData$score
shapiro.test(pyScores)
shapiro.test(scScores )
var.test(pyScores , scScores)
t.test(pyScores , scScores , paired=FALSE, var.equal=TRUE)
boxplot(pyScores, scScores, names=c("Python", "Scheme"))
scores <- progData$score
ages <- progData$age
model <- lm(scores~ages)
summary(model)
plot(ages, scores)
abline(model, col="red")
q()
ii-f-t-r <- read.csv("ii-first-trans-rand")
setwd("C:/Users/arnau/Documents/School/Projecten 16_17/Heuristic optimization/HeuristicOptim/results")
ii-f-t-r <- read.csv("ii-first-trans-rand")
setwd("C:/Users/arnau/Documents/School/Projecten 16_17/Heuristic optimization/HeuristicOptim/results")
ii-f-t-r <- read.csv("ii-first-trans-rand.txt")
ii.f.t.r <- read.csv("ii-first-trans-rand.txt")
ii.f.t.r
ii.f.t.r$Solution
best.sol <- read.csv("bestSolutions.txt")
a.cost <- 100 * (ii.f.t.r$Solution - best.sol$BS) / best.sol$BS
a.cost
a.ctSum <- sum(ii.f.t.r$CT) 
a.ctSum
a.avgDev <- mean(a.devs)
a.avgDev
setwd("C:/Users/arnau/Documents/School/Projecten 16_17/Heuristic optimization/HeuristicOptim/results")
best.sol <- read.csv("bestSolutions.txt")
ii.f.t.r <- read.csv("ii-first-trans-rand.txt")
a.devs <- 100 * (ii.f.t.r$Solution - best.sol$BS) / best.sol$BS
a.ctSum <- sum(ii.f.t.r$CT)
a.avgDev <- mean(a.devs)
a.avgDev
ii.f.t.rz <- read.csv("ii-first-trans-rz.txt")
b.devs <- 100 * (ii.f.t.rz$Solution - best.sol$BS) / best.sol$BS
b.ctSum <- sum(ii.f.t.rz$CT) 
b.avgDev <- mean(b.devs)
b.ctSum
b.avgDev
b.devs
#Best, transpose, Random
ii.b.t.r <- read.csv("ii-best-trans-rand.txt")
c.devs <- 100 * (ii.b.t.r$Solution - best.sol$BS) / best.sol$BS
c.ctSum <- sum(ii.b.t.r$CT) 
c.avgDev <- mean(c.devs)
c.ctSum
c.avgDev
#Best, transpose, Random
ii.b.t.rz <- read.csv("ii-best-trans-rz.txt")
d.devs <- 100 * (ii.b.t.rz$Solution - best.sol$BS) / best.sol$BS
d.ctSum <- sum(ii.b.t.rz$CT) 
d.avgDev <- mean(d.devs)
d.ctSum
d.avgDev
#First, exchange, Random
ii.f.e.r <- read.csv("ii-first-ex-rand.txt")
e.devs <- 100 * (ii.f.e.r$Solution - best.sol$BS) / best.sol$BS
e.ctSum <- sum(ii.f.e.r$CT) 
e.avgDev <- mean(e.devs)
e.ctSum
e.avgDev
#First, exchange, RZ
ii.f.e.rz <- read.csv("ii-first-ex-rz.txt")
f.devs <- 100 * (ii.f.e.rz$Solution - best.sol$BS) / best.sol$BS
f.ctSum <- sum(ii.f.e.rz$CT) 
f.avgDev <- mean(f.devs)
f.ctSum
f.avgDev
#First, insert, Random
ii.f.i.r <- read.csv("ii-first-ins-rand.txt")
g.devs <- 100 * (ii.f.i.r$Solution - best.sol$BS) / best.sol$BS
g.ctSum <- sum(ii.f.e.rz$CT) 
g.avgDev <- mean(g.devs)
g.ctSum
g.avgDev
#First, insert, Random
ii.f.i.r <- read.csv("ii-first-ins-rand.txt")
g.devs <- 100 * (ii.f.i.r$Solution - best.sol$BS) / best.sol$BS
g.ctSum <- sum(ii.f.i.r$CT) 
g.avgDev <- mean(g.devs)
g.ctSum
g.avgDev
#First, insert, RZ
ii.f.i.rz <- read.csv("ii-first-insert-rz.txt")
h.devs <- 100 * (ii.f.i.rz$Solution - best.sol$BS) / best.sol$BS
h.ctSum <- sum(ii.f.i.rz$CT) 
h.avgDev <- mean(h.devs)
h.ctSum
h.avgDev
t.test (a.devs, b.devs, paired=T)$p.value
wilcox.test (a.devs, b.devs, paired=T)$p.value
t.test (c.devs, d.devs, paired=T)$p.value
wilcox.test (c.devs, d.devs, paired=T)$p.value
#T->E->I, Random
vnd.tei.r <- read.csv("vnd-tei-random.txt")
i.devs <- 100 * (vnd.tei.r$Solution - best.sol$BS) / best.sol$BS
i.ctSum <- sum(vnd.tei.r$CT) 
i.avgDev <- mean(i.devs)
i.ctSum
i.avgDev
#T->E->I, RZ
vnd.tei.rz <- read.csv("vnd-tei-rz.txt")
j.devs <- 100 * (vnd.tei.rz$Solution - best.sol$BS) / best.sol$BS
j.ctSum <- sum(vnd.tei.rz$CT) 
j.avgDev <- mean(j.devs)
j.ctSum
j.avgDev
t.test (e.devs, f.devs, paired=T)$p.value
wilcox.test (e.devs, f.devs, paired=T)$p.value
t.test (g.devs, h.devs, paired=T)$p.value
wilcox.test (g.devs, h.devs, paired=T)$p.value
#Statistical tests
t.test (i.devs, j.devs, paired=T)$p.value
wilcox.test (i.devs, j.devs, paired=T)$p.value
#T->I->E, Random
vnd.tie.r <- read.csv("vnd-tie-random.txt")
k.devs <- 100 * (vnd.tie.r$Solution - best.sol$BS) / best.sol$BS
k.ctSum <- sum(vnd.tie.r$CT) 
k.avgDev <- mean(k.devs)
k.ctSum
k.avgDev
#T->I->I, RZ
vnd.tie.rz <- read.csv("vnd-tie-rz.txt")
l.devs <- 100 * (vnd.tie.rz$Solution - best.sol$BS) / best.sol$BS
l.ctSum <- sum(vnd.tie.rz$CT) 
l.avgDev <- mean(l.devs)
l.ctSum
l.avgDev
q()
